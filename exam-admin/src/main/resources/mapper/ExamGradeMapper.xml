<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sias.admin.mapper.ExamGradeMapper">

    <resultMap id="BaseResultMap" type="com.sias.admin.domain.ExamGrade">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="gradeId" column="grade_id" jdbcType="INTEGER"/>
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="paperId" column="paper_id" jdbcType="INTEGER"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="time" column="time" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,title,grade_id,
        course_id,paper_id,start_time,
        end_time,time,create_time,
        deleted
    </sql>

    <insert id="insert" parameterType="com.sias.admin.domain.ExamGrade">
        insert into exam_grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="paperId != null">
                paper_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test=" endTime != null">
                end_time,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="gradeId != null">
                grade_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="title != null">
                #{title},
            </if>
            <if test="paperId != null">
                #{paperId},
            </if>
            <if test="courseId != null">
                #{courseId},
            </if>
            <if test="startTime != null">
                #{startTime},
            </if>
            <if test=" endTime != null">
                #{endTime},
            </if>
            <if test="time != null">
                #{time},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="gradeId != null">
                #{gradeId},
            </if>
        </trim>
    </insert>
    <select id="page" resultType="com.sias.admin.domain.ExamGrade"
            parameterType="com.sias.admin.vm.exam.ExamGradePageRequestVM">
        SELECT
        <include refid="Base_Column_List"/>
        FROM exam_grade
        <where>
            deleted=0
            <if test="request.courseId != null ">
                and course_id= #{request.courseId}
            </if>
            <if test="request.gradeId != null ">
                and grade_id= #{request.gradeId}
            </if>
            <if test="request.ids != null and request.ids.size>0">
                and grade_id in
                <foreach collection="request.ids" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <update id="deleteByPrimaryKey" parameterType="integer">
        update exam_grade
        set deleted = 1
        where id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultType="com.sias.admin.domain.ExamGrade">
        select
        <include refid="Base_Column_List"/>
        from exam_grade where deleted = 0 and id = #{id}
    </select>
    <select id="selecetByGradeId" resultType="com.sias.admin.domain.ExamGrade">
        select
        <include refid="Base_Column_List"/>
        from exam_grade where deleted = 0 and grade_id = #{id}
    </select>

    <select id="selecetByGradeIds" resultType="com.sias.admin.domain.ExamGrade">
        select
        <include refid="Base_Column_List"/>
        from exam_grade where deleted = 0 and grade_id in
        <foreach item="id" collection="ids" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </select>
    <!--    <select id="selectCountByDate" resultType="com.sias.admin.domain.KeyValue">-->

    <!--        SELECT start_time as name,COUNT(start_time) as value from-->
    <!--            (-->
    <!--            SELECT DATE_FORMAT(start_time,'%Y-%m-%d') as start_time from exam_grade-->
    <!--            WHERE  start_time  between  #{startTime}  and  #{endTime}-->
    <!--            ) a-->
    <!--        GROUP BY start_time-->

    <!--    </select>-->
</mapper>
